name: Manual Build and Release Go Binary

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release Tag (e.g., v1.0.0)'
        required: true
      release_name:
        description: 'Release Name'
        required: true
      release_body:
        description: 'Release Body'
        required: false

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.20' # Specify the Go version you're using

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.release_tag }}
        release_name: ${{ github.event.inputs.release_name }}
        body: ${{ github.event.inputs.release_body }}
        draft: false
        prerelease: false

    - name: Build for Linux
      run: |
        go build -v -o gwiz ./main.go
      env:
        GOOS: linux
        GOARCH: amd64

    - name: Upload Linux binary to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./gwiz
        asset_name: gwiz-linux-amd64
        asset_content_type: application/octet-stream

    - name: Build for Windows
      run: |
        go build -v -o gwiz.exe ./main.go
      env:
        GOOS: windows
        GOARCH: amd64

    - name: Upload Windows binary to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./gwiz.exe
        asset_name: gwiz-windows-amd64.exe
        asset_content_type: application/octet-stream

    - name: Build for macOS
      run: |
        go build -v -o gwiz-macos ./main.go
      env:
        GOOS: darwin
        GOARCH: amd64

    - name: Upload macOS binary to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./gwiz-macos
        asset_name: gwiz-macos-amd64
        asset_content_type: application/octet-stream
